!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CLIENT_H_	./client.h	2;"	d
CLIETN_HANDLER_H_	./client_handler.h	2;"	d
CPPFLAGS	./Makefile	/^CPPFLAGS := $(CPP_FLAGS) $(INCLUDE_DIRS) $(MACROS)$/;"	m
CPP_FLAGS	./Makefile	/^CPP_FLAGS= -Wall -O3 -g $/;"	m
CXX	./Makefile	/^CXX=g++$/;"	m
DB_OPERATE_H_	./db_operate.h	2;"	d
DEFAULE	./login.cpp	20;"	d	file:
HANDLE_LOGIN_MESSAGE	./login.cpp	16;"	d	file:
INCLUDE_DIRS	./Makefile	/^INCLUDE_DIRS = -I.\/ -I..\/share\/net  -I..\/share\/common  -I..\/share\/thread  -I..\/common -I\/usr\/include\/mysql\/  -I..\/protc$/;"	m
LFALGS	./Makefile	/^LFALGS :=  $(CPP_FLAGS)  $(LIB) $(LIB_DIR)$/;"	m
LIB	./Makefile	/^LIB=-lpthread -lmysqlclient -lz -lcrypt -lnsl -lm -lssl -lcrypto -lprotobuf$/;"	m
LIB_DIR	./Makefile	/^LIB_DIR = -L\/usr\/lib64\/mysql $/;"	m
LOGIN_H_	./login.h	2;"	d
MACROS	./Makefile	/^MACROS =$/;"	m
MAX_BUFF_SIZE	./client_handler.h	10;"	d
MAX_DATABASE_LEN	./mysqldb.h	/^const int MAX_DATABASE_LEN = 64;$/;"	v
MAX_ONE_MESSAGE_LEN	./client_handler.h	12;"	d
MAX_ONE_MESSAGE_lEN	./client.cpp	/^static const int MAX_ONE_MESSAGE_lEN = 1024;$/;"	v	file:
MAX_PASSWORD_LEN	./mysqldb.h	/^const int MAX_PASSWORD_LEN = 64;$/;"	v
MAX_SERVER_LEN	./mysqldb.h	/^const int MAX_SERVER_LEN = 64;$/;"	v
MAX_SQL_DATA_LEN	./login.cpp	/^const int MAX_SQL_DATA_LEN = 1024;$/;"	v
MAX_USER_LEN	./mysqldb.h	/^const int MAX_USER_LEN  = 64;$/;"	v
MESSAGE_DATA_LEN	./client.cpp	/^static const int MESSAGE_DATA_LEN = 1000;$/;"	v	file:
MESSAGE_HEAD_LEN	./client.cpp	/^static const int MESSAGE_HEAD_LEN =  12;$/;"	v	file:
MSG_HEAD_LEN	./client_handler.h	11;"	d
MYSQLDB_H_	./mysqldb.h	2;"	d
OBJS_CC	./Makefile	/^OBJS_CC := $(notdir $(patsubst %.cc, %.o, $(SRC_CC)))$/;"	m
OBJS_CPP	./Makefile	/^OBJS_CPP := $(patsubst %.cpp, %.o, $(SRCS))$/;"	m
PLAYER_H_	./player.h	2;"	d
PLAYER_MGR_H_	./player_mgr.h	2;"	d
SRCS	./Makefile	/^SRCS := $(wildcard *.cpp)$/;"	m
SRC_CC	./Makefile	/^SRC_CC := $(wildcard ..\/protc\/*.cc)$/;"	m
TARGET	./Makefile	/^TARGET=zenus$/;"	m
TEST_HANDLER_H_	./test_handler.h	2;"	d
VPATH	./Makefile	/^VPATH = ..\/share\/$/;"	m
base_client	./test_handler.h	/^class base_client : public epoll_handler$/;"	c
black_list_	./player.h	/^	std::vector<std::string> black_list_;$/;"	m	class:player
buff_	./client_handler.h	/^	char buff_[MAX_BUFF_SIZE];$/;"	m	class:client_handler
buff_left	./client_handler.cpp	/^int client_handler::buff_left()$/;"	f	class:client_handler
buff_messg_len	./client_handler.cpp	/^int client_handler::buff_messg_len()$/;"	f	class:client_handler
check_one_message_ok	./client_handler.cpp	/^int client_handler::check_one_message_ok()$/;"	f	class:client_handler
client	./client.h	/^class client : public client_handler$/;"	c
client_handler	./client_handler.cpp	/^client_handler::client_handler(int sock, struct sockaddr_in* remote_addr) :$/;"	f	class:client_handler
client_handler	./client_handler.h	/^class client_handler : public epoll_handler$/;"	c
close	./mysqldb.cpp	/^void mysqldb::close() $/;"	f	class:mysqldb
connect	./mysqldb.cpp	/^int mysqldb::connect()$/;"	f	class:mysqldb
database_	./mysqldb.h	/^	char database_[MAX_DATABASE_LEN];$/;"	m	class:mysqldb
db_operate	./db_operate.h	/^class db_operate : public singleton<db_operate>$/;"	c
errnu	./mysqldb.cpp	/^int mysqldb::errnu()$/;"	f	class:mysqldb
find	./player_mgr.cpp	/^player* player_mgr::find(std::string &account)$/;"	f	class:player_mgr
good_friends_	./player.h	/^	std::vector<std::string> good_friends_;$/;"	m	class:player
handle_buff_msg	./client_handler.cpp	/^int client_handler::handle_buff_msg()$/;"	f	class:client_handler
handle_close	./test_handler.h	/^	virtual int handle_close()$/;"	f	class:base_client
handle_err	./test_handler.h	/^	virtual int handle_err()$/;"	f	class:base_client
handle_input	./client_handler.cpp	/^int client_handler::handle_input()$/;"	f	class:client_handler
handle_input	./test_handler.h	/^	virtual int handle_input()$/;"	f	class:base_client
handle_message	./client.cpp	/^int client::handle_message(const int msg_id,$/;"	f	class:client
handle_message	./client_handler.cpp	/^int client_handler::handle_message(const int msg_id,$/;"	f	class:client_handler
handle_output	./client_handler.cpp	/^int client_handler::handle_output()$/;"	f	class:client_handler
handle_output	./test_handler.h	/^	virtual int handle_output()$/;"	f	class:base_client
head_	./client_handler.h	/^	char *head_;$/;"	m	class:client_handler
init	./db_operate.cpp	/^int db_operate::init(const char* server,$/;"	f	class:db_operate
init	./mysqldb.cpp	/^int mysqldb::init(const char* server,$/;"	f	class:mysqldb
is_connect_	./mysqldb.h	/^	bool is_connect_;;$/;"	m	class:mysqldb
login	./login.h	/^class login : public singleton<login>$/;"	c
login_app	./login.cpp	/^int login::login_app(client *pclietn, const char *msg, const int len)$/;"	f	class:login
main	./test_accept_main.cpp	/^int main()$/;"	f
move_buff_head	./client_handler.cpp	/^void client_handler::move_buff_head()$/;"	f	class:client_handler
msg_id_	./client_handler.h	/^	int msg_id_;  \/\/用于测试验证消息号$/;"	m	class:client_handler
mysql_	./mysqldb.h	/^	MYSQL  mysql_;$/;"	m	class:mysqldb
mysqldb	./mysqldb.cpp	/^mysqldb::mysqldb()$/;"	f	class:mysqldb
mysqldb	./mysqldb.cpp	/^mysqldb::mysqldb(const char* server,$/;"	f	class:mysqldb
mysqldb	./mysqldb.h	/^class mysqldb$/;"	c
mysqldb_	./db_operate.h	/^	mysqldb* mysqldb_;$/;"	m	class:db_operate
password_	./mysqldb.h	/^	char password_[MAX_PASSWORD_LEN];$/;"	m	class:mysqldb
player	./player.h	/^class player$/;"	c
player_map_	./player_mgr.h	/^	std::map<std::string, player*> player_map_;$/;"	m	class:player_mgr
player_mgr	./player_mgr.h	/^class player_mgr : public singleton<player_mgr>$/;"	c
port_	./mysqldb.h	/^	unsigned int port_;$/;"	m	class:mysqldb
process_msg	./login.cpp	/^int login::process_msg(client *pclient, const int msg_id, const char *msg, const int len)$/;"	f	class:login
query	./db_operate.cpp	/^MYSQL_RES* db_operate::query(const char *msg, const int len)$/;"	f	class:db_operate
query	./mysqldb.cpp	/^MYSQL_RES* mysqldb::query(const char *sql, const int len)$/;"	f	class:mysqldb
regist_accout	./login.cpp	/^int login::regist_accout(client *pclient, const char *msg, const int len)$/;"	f	class:login
row_number	./db_operate.cpp	/^unsigned int db_operate::row_number(MYSQL_RES *res)$/;"	f	class:db_operate
row_number	./mysqldb.cpp	/^unsigned int mysqldb::row_number(MYSQL_RES *res)$/;"	f	class:mysqldb
send_client_msg	./client.cpp	/^int client::send_client_msg(const int msg_id, const char *msg, const int len)$/;"	f	class:client
send_errno	./client.cpp	/^int client::send_errno(const int msg_id, const int err_id)$/;"	f	class:client
send_message	./client_handler.cpp	/^int client_handler::send_message(const char *msg, const int len)$/;"	f	class:client_handler
send_msg_impl	./client.cpp	/^int client::send_msg_impl(const int msg_id, const char *msg, const int len, const int ernno)$/;"	f	class:client
server_	./mysqldb.h	/^	char server_[MAX_SERVER_LEN];$/;"	m	class:mysqldb
sock_busy_message_list_	./client_handler.h	/^	std::list<std::string> sock_busy_message_list_;$/;"	m	class:client_handler
store	./db_operate.cpp	/^bool db_operate::store(const char *msg, const int len)$/;"	f	class:db_operate
store	./mysqldb.cpp	/^bool mysqldb::store(const char *sql, const int len)$/;"	f	class:mysqldb
tail_	./client_handler.h	/^	char *tail_;$/;"	m	class:client_handler
test_handler	./test_handler.h	/^	test_handler(int sock_fd, struct sockaddr_in *remote_addr)$/;"	f	class:base_client
user_	./mysqldb.h	/^	char user_[MAX_USER_LEN];$/;"	m	class:mysqldb
~client_handler	./client_handler.h	/^	virtual ~client_handler()$/;"	f	class:client_handler
~mysqldb	./mysqldb.cpp	/^mysqldb::~mysqldb()$/;"	f	class:mysqldb
